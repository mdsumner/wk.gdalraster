% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wk_raster.R
\name{wk_image}
\alias{wk_image}
\alias{wk_raster}
\title{Read raster data with a wk grid}
\usage{
wk_image(x, grid = NULL, ..., max_dim = 1024)

wk_raster(x, grid = NULL, ..., max_dim = 1024)
}
\arguments{
\item{x}{a GDAL source (a character string) file name, URL, SDS string, data base connection string}

\item{grid}{a grd_rct object (can be NULL)}

\item{...}{arguments passed to \code{\link[vapour:vapour_warp_raster]{vapour::vapour_warp_raster()}}, particularly 'resample'}

\item{max_dim}{default is 1024, ignored if 'grid' is not \code{NULL}}
}
\value{
grd_rct
}
\description{
Read any GDAL accessible source into a wk grd_rct object.
}
\details{
The argument 'grid' is used to provide an extent, dimension, and projection.

If argument 'grid' is NULL a heuristic is used to produce a smallish version of the source.
}
\examples{
## some sources
dsn <- paste0("WMTS:https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/",
                 "MapServer/WMTS/1.0.0/WMTSCapabilities.xml,layer=USGSTopo,tilematrixset=default028mm")
vearth <- '<GDAL_WMS> <Service name="VirtualEarth">
<ServerUrl>http://a${server_num}.ortho.tiles.virtualearth.net/tiles/a${quadkey}.jpeg?g=90</ServerUrl></Service>
    <MaxConnections>4</MaxConnections>    <Cache/>    </GDAL_WMS>'

g <- wk_image(dsn)
plot(g)

op <- par(mar = rep(0, 4))
dm <- dev.size("px")

b <- 1e5

grid <- wk::grd(bbox = wk::rct(-b, -b, b, b, crs = "+proj=laea +lon_0=-63 +lat_0=45"), nx = dm[1], ny = dm[2])
g1 <- wk_image(dsn, grid, resample = "cubic")
plot(g1)
im <- wk_image(vearth, grid, resample = "cubic")
plot(im)

gridt <- wk::grd(bbox = wk::rct(-b, -b, b, b, crs = "+proj=laea +lon_0=147 +lat_0=-42"), nx = dm[1], ny = dm[2])
g2 <- wk_image(vearth, gridt, resample = "cubic")
plot(g2)

aws.elev <- paste0(
   readLines("https://raw.githubusercontent.com/hypertidy/gdalwebsrv/master/inst/awswmsxml/elevation-tiles-prod.xml"),
   collapse = "")
dem <- wk_raster(aws.elev, grid)


#f <- raadtools::topofile("gebco_19")
#r <- wk_raster(f, gridt)
#plot(r)
}
